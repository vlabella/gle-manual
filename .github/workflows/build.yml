#
# -- build.yml - build PDF version of the GLE manual on linux
#
name: Build PDF of GLE Manual
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Run workflow from GLE release workflow - uploads artifacts to release
  repository_dispatch:
    types: [gle-release]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout GLE Manual
        uses: actions/checkout@v4

      - name: Checkout GLE
        uses: actions/checkout@v4
        with:
          repository: "vlabella/gle"
          path: gle

      - name: Get Version Number from GLE's CMakeLists.txt file
        id: version-number
        run: echo "VERSION=$(awk 'tolower($0) ~ /project\([[:blank:]]*[[:alnum:]]+[[:blank:]]+version[[:blank:]]+[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+[[:blank:]]*\)/{print $4}' gle/src/CMakeLists.txt)" >> $GITHUB_ENV

      - name: Checkout GLE Library
        uses: actions/checkout@v4
        with:
          repository: "vlabella/gle-library"
          path: gle-library

      - name: Add gle-library to GLE_USRLIB
        working-directory: ${{github.workspace}}
        run: export GLE_USRLIB=${{github.workspace}}/gle-library/include:$GLE_USRLIB

      - name: update apt
        run: sudo apt update

      - name: install packages
        # dont install qt - not building the GUI
        run: |
         set -x
         touch ${{github.workspace}}/gle/configure.args
         sudo apt install ghostscript texlive texlive-latex-extra texlive-science dvipng \
         cmake freeglut3-dev libboost-dev libcairo-dev libdeflate-dev libgs-dev \
         libjpeg-turbo8-dev liblzma-dev libpixman-1-dev libpng-dev libtiff-dev libz-dev

      - name: Configure cmake
        working-directory: ${{github.workspace}}/gle
        run: cmake -S src -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_GUI=OFF -DBUILD_MANIP=OFF

      - name: Build GLE
        working-directory: ${{github.workspace}}/gle
        run: cmake --build build

      - name: Install GLE
        working-directory: ${{github.workspace}}/gle
        run: DESTDIR=destroot cmake --install build

      - name: Add GLE to PATH
        working-directory: ${{github.workspace}}
        run: export PATH=${{github.workspace}}/gle/destroot/usr/local/bin:$PATH

      - name: Build GLE Manual
        working-directory: ${{github.workspace}}
        run: |
          export GLE_USRLIB=${{github.workspace}}/gle-library/include:$GLE_USRLIB \
          PATH=${{github.workspace}}/gle/destroot/usr/local/bin:$PATH && \
          make -f Makefile.gcc

      - name: Upload Artifacts - GLE Manual PDF
        uses: actions/upload-artifact@v4.4.3
        with:
          name: GLE Manual PDF
          path: ${{github.workspace}}/gle-manual.pdf
          if-no-files-found: warn
          retention-days: 0
          compression-level: 0

        # create release if started from gle-release workflow
      - name: Create Release
        if: ${{ github.event_name == 'repository_dispatch' && github.event.action == 'gle-release'}}
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          tag_name: ${{ github.event.client_payload.tag }}
          name: ${{ github.event.client_payload.tag }}
          body:  "Release to coincide with GLE release of same tag"
          draft: false
          prerelease: false

        # upload to release location if started from gle-release workflow
      - name: Upload PDF to Release Location
        if: ${{ github.event_name == 'repository_dispatch' && github.event.action == 'gle-release'}}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ${{github.workspace}}/gle-manual.pdf
          tag: ${{ github.event.client_payload.tag }}
          overwrite: true

        # upload to GLE release location as well
      - name: Upload PDF to Release Location
        if: ${{ github.event_name == 'repository_dispatch' && github.event.action == 'gle-release'}}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GLE_PAT }}
          file_glob: true
          file: ${{github.workspace}}/gle-manual.pdf
          tag: ${{ github.event.client_payload.tag }}
          overwrite: true
          repo_name: vlabella/GLE
